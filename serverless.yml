service: our-todo-app
frameworkVersion: '3'

provider:
  name: aws
  runtime: python3.8
  region: eu-north-1
  environment:
    USERS_TABLE: usersTable
  httpApi:
    cors: true
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:*
          Resource: "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.USERS_TABLE}"
        
plugins:
  - serverless-python-requirements
  - serverless-dynamodb-local
  - serverless-offline

functions:
  create_user:
    handler: api/create_user.handler
    events:
      - httpApi:  
          method: post
          path: /user
  get_user:
    handler: api/get_user.handler
    events:
      - httpApi:
          method: get
          path: /user/{user_id}

custom:
   dynamodb:
      start:
        inMemory: true
        migrate: true
        sharedDb: true
      stages:
         - dev

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        TableName: ${self:provider.environment.USERS_TABLE}